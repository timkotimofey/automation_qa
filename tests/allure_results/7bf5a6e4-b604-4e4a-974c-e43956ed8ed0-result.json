{"name": "Checking the opening of an alert", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=113.0.5672.127)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x010B8893+48451]\n\t(No symbol) [0x0104B8A1]\n\t(No symbol) [0x00F54F20]\n\t(No symbol) [0x00F4E37F]\n\t(No symbol) [0x00F68384]\n\t(No symbol) [0x00F9A334]\n\t(No symbol) [0x00F6824D]\n\t(No symbol) [0x00F9A0B6]\n\t(No symbol) [0x00F77E08]\n\t(No symbol) [0x00F78F2D]\n\tGetHandleVerifier [0x01318E3A+2540266]\n\tGetHandleVerifier [0x01358959+2801161]\n\tGetHandleVerifier [0x0135295C+2776588]\n\tGetHandleVerifier [0x01142280+612144]\n\t(No symbol) [0x01054F6C]\n\t(No symbol) [0x010511D8]\n\t(No symbol) [0x010512BB]\n\t(No symbol) [0x01044857]\n\tBaseThreadInitThunk [0x766E00C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77087B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77087B1E+238]", "trace": "self = <alerts_frame_windows_test.TestAlertsFrameWindow.TestAlertPage object at 0x0000026307F53CA0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bf6967ca74797d6ade3e75d207bd3ef5\")>\n\n    @allure.title('Checking the opening of an alert')\n    def test_see_alert(self, driver):\n        alert_page = AlertsPage(driver, 'https://demoqa.com/alerts')\n        alert_page.open()\n>       alert_text = alert_page.check_see_alert()\n\ntests\\alerts_frame_windows_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\alerts_frame_windows_page.py:30: in check_see_alert\n    alert_window = self.driver.switch_to.alert\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:55: in alert\n    _ = alert.text\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\alert.py:59: in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000263089D35B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=113.0.5...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77087B4E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77087B1E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=113.0.5672.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x010B8893+48451]\nE       \t(No symbol) [0x0104B8A1]\nE       \t(No symbol) [0x00F54F20]\nE       \t(No symbol) [0x00F4E37F]\nE       \t(No symbol) [0x00F68384]\nE       \t(No symbol) [0x00F9A334]\nE       \t(No symbol) [0x00F6824D]\nE       \t(No symbol) [0x00F9A0B6]\nE       \t(No symbol) [0x00F77E08]\nE       \t(No symbol) [0x00F78F2D]\nE       \tGetHandleVerifier [0x01318E3A+2540266]\nE       \tGetHandleVerifier [0x01358959+2801161]\nE       \tGetHandleVerifier [0x0135295C+2776588]\nE       \tGetHandleVerifier [0x01142280+612144]\nE       \t(No symbol) [0x01054F6C]\nE       \t(No symbol) [0x010511D8]\nE       \t(No symbol) [0x010512BB]\nE       \t(No symbol) [0x01044857]\nE       \tBaseThreadInitThunk [0x766E00C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77087B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77087B1E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoAlertPresentException"}, "start": 1685821603212, "stop": 1685821899104, "uuid": "36117bca-c052-46c1-b0cb-0466999fc555", "historyId": "3132cea5bde3203e66e960c1ab7c467c", "testCaseId": "3132cea5bde3203e66e960c1ab7c467c", "fullName": "tests.alerts_frame_windows_test.TestAlertPage#test_see_alert", "labels": [{"name": "suite", "value": "Alerts, Frame & Windows"}, {"name": "feature", "value": "Alerts Page"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestAlertsFrameWindow"}, {"name": "host", "value": "LAPTOP-OHPH4I30"}, {"name": "thread", "value": "39292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.alerts_frame_windows_test"}]}